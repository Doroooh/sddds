#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

#define MAX_INPUT_SIZE 1024

void display_prompt() {
    printf("#cisfun$ ");
    fflush(stdout);
}

int execute_command(char *command) {
    pid_t child_pid;

    if ((child_pid = fork()) == -1) {
        perror("fork");
        exit(EXIT_FAILURE);
    }

    if (child_pid == 0) {
        // Child process
        if (execlp(command, command, (char *)NULL) == -1) {
            perror("execlp");
            exit(EXIT_FAILURE);
        }
    } else {
        // Parent process
        waitpid(child_pid, NULL, 0);
    }

    return 1;
}

int main() {
    char input[MAX_INPUT_SIZE];

    while (1) {
        display_prompt();

        // Read a line of input
        if (fgets(input, sizeof(input), stdin) == NULL) {
            if (feof(stdin)) {
                // Handle EOF (Ctrl+D)
                printf("\n");
                break;
            } else {
                perror("fgets");
                exit(EXIT_FAILURE);
            }
        }

        // Remove the trailing newline character
        input[strcspn(input, "\n")] = '\0';

        // Execute the command
        if (strlen(input) > 0) {
            if (!execute_command(input)) {
                fprintf(stderr, "Command execution failed\n");
            }
        }
    }

    printf("\nExiting shell. Goodbye!\n");

    return 0;
}
